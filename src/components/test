return (
    <div className="min-h-screen p-8 bg-amber-50">
      <div className="max-w-6xl mx-auto">
        <div className="flex justify-between items-center mb-4">
          <Input
            value={content.label}
            onChange={(e) => setContent(prev => ({ ...prev, label: e.target.value }))}
            className="w-1/3 text-lg font-semibold text-amber-800 bg-amber-50 border-amber-200"
            placeholder="Enter label"
          />
          <div className="flex space-x-2">
            <Button className="bg-amber-600 text-white hover:bg-amber-700" onClick={handleSubmit}>
              Submit
            </Button>
            <Button className="bg-red-600 text-white hover:bg-red-700">
              <Trash className="w-4 h-4 mr-2" />
              Delete
            </Button>
          </div>
        </div>

        <div className="grid md:grid-cols-2 gap-12 items-start">
          <div className="space-y-4">
            <div 
              className="relative w-[480px] h-[480px] rounded-2xl overflow-hidden bg-white shadow-lg border-2 border-amber-200"
              onDragOver={(e) => e.preventDefault()}
              onDrop={(e) => handleDrop(e, 'mainImage')}
            >
              <Image
                src={content.mainImage}
                alt="Product"
                fill
                className="object-contain p-0"
                sizes="480px"
              />
              <label
                htmlFor="mainImage"
                className="absolute inset-0 flex items-center justify-center bg-black/50 opacity-0 hover:opacity-100 transition-opacity cursor-pointer"
              >
                <Upload className="w-8 h-8 text-white" />
              </label>
              <Input
                type="file"
                id="mainImage"
                accept="image/*"
                onChange={(e) => handleFileUpload(e.target.files?.[0] as File, 'mainImage')}
                className="hidden"
              />
            </div>
          </div>

          <div className="space-y-8">
            <Input
              value={content.title}
              onChange={(e) => setContent(prev => ({ ...prev, title: e.target.value }))}
              className="text-4xl font-bold mb-4 text-amber-800 bg-amber-50 border-amber-200"
              placeholder="Enter title"
            />

            <Textarea
              value={content.mainDescription}
              onChange={(e) => setContent(prev => ({ ...prev, mainDescription: e.target.value }))}
              className="min-h-[100px] mb-4 text-amber-700 bg-amber-50 border-amber-200"
              placeholder="Enter main description"
            />

            <Textarea
              value={content.secondaryDescription}
              onChange={(e) => setContent(prev => ({ ...prev, secondaryDescription: e.target.value }))}
              className="min-h-[100px] mb-8 text-amber-700 bg-amber-50 border-amber-200"
              placeholder="Enter secondary description"
            />

            <div className="flex justify-between">
              {content.icons.map((icon, index) => (
                <div 
                  key={index} 
                  className="relative w-[112px] h-[112px] rounded-2xl overflow-hidden shadow-md border-2 border-amber-200 bg-white"
                  onDragOver={(e) => e.preventDefault()}
                  onDrop={(e) => handleDrop(e, 'icons', index)}
                >
                  <Image
                    src={icon}
                    alt={`Icon ${index + 1}`}
                    fill
                    className="object-cover p-2"
                    sizes="112px"
                  />
                  <label
                    htmlFor={`icon-${index}`}
                    className="absolute inset-0 flex items-center justify-center bg-black/50 opacity-0 hover:opacity-100 transition-opacity cursor-pointer"
                  >
                    <Upload className="w-6 h-6 text-white" />
                  </label>
                  <Input
                    type="file"
                    id={`icon-${index}`}
                    accept="image/*"
                    onChange={(e) => handleFileUpload(e.target.files?.[0] as File, 'icons', index)}
                    className="hidden"
                  />
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>